apply plugin: 'java'
//apply plugin: 'application'
//mainClassName = 'com.viveret.pilexa.pi.Main'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.7.0'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.7.0', classifier: 'models'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.7.0', classifier: 'models-english'
    compile group: 'edu.stanford.nlp', name: 'stanford-parser', version: '3.7.0'
    //compile group: 'edu.stanford.nlp', name: 'stanford-pos-tagger', version: '3.0.2'

    compile group: 'com.google.cloud', name: 'google-cloud-speech', version: '0.8.1-alpha'

    compile group: 'edu.cmu.sphinx', name: 'sphinx4-core', version: '5prealpha-SNAPSHOT'
    compile group: 'edu.cmu.sphinx', name: 'sphinx4-data', version: '5prealpha-SNAPSHOT'
    
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.1.0'

    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.0'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.0'
    compile group: 'log4j', name: 'log4j', version: '1.2.14'

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    
    compile group: 'de.dfki.mary', name: 'voice-cmu-slt-hsmm', version: '5.2'
}

sourceSets {
    main {
        java {
            srcDir 'src/'
        }
        resources {
            srcDir 'res/'
        }
    }
}

task run(type: JavaExec, dependsOn:build) {
    classpath sourceSets.main.runtimeClasspath.asPath
    main = "com.viveret.pilexa.pi.Main"
    standardInput = System.in
    jvmArgs '-Xmx4096m', '-Xms1024m'
    maxHeapSize = '2048m'
}

task runMac(type:Exec, dependsOn: build) {
    commandLine './run.sh'
}

task copyRuntimeLibs(type: Copy) {
    into "$buildDir/dep"
    from configurations.runtime
}

task publish(type: Exec) {
    commandLine './publish.sh'
}